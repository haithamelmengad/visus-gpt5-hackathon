### Agent Rules for Visus (Next.js + Three.js)

- Default to development mode for all runs. Do not build for production unless the user explicitly asks to "build for prod".

- When starting the app:

  - Use the following non-interactive runbook:
    1. `cd web`
    2. Ensure `.env.local` exists with keys: `SPOTIFY_CLIENT_ID`, `SPOTIFY_CLIENT_SECRET`, `NEXTAUTH_SECRET`, `NEXTAUTH_URL=http://localhost:3000`
    3. `npm ci || npm install`
    4. `npm run dev` (Webpack dev server with Fast Refresh/hot reload)
       - Optional: `npm run dev:turbo` to use Turbopack
  - Treat long-running servers as background jobs.
  - Health check: `GET http://localhost:3000` should return 200.

  - Hot reload expectations:
    - Dev uses Webpack Fast Refresh by default (`NEXT_DISABLE_TURBOPACK=1` is set in the dev script) for reliable hot reload.
    - The dev server is configured with file watcher polling to improve change detection across filesystems.
    - Always run commands from the `web/` directory (`/Users/haithamelmengad/Code/visus-gpt5-hackathon/web`). Running from the repo root will fail with npm ENOENT (missing `package.json`).

- Never run production build commands by default:

  - Do NOT run `npm run build`, `next build`, or `next start` unless the user explicitly instructs to build for prod.
  - If explicitly asked to build for prod:
    1. `cd web`
    2. `npm ci || npm install`
    3. `npm run build`
    4. `npm start`

- Operational guidelines:

  - Prefer absolute paths when invoking tools/commands.
  - Use non-interactive flags where applicable.
  - Do not log or print secrets; rely on `.env.local`.

- Context reminders:
  - Core app is in `web/` (Next.js App Router, TypeScript).
  - Keep performance reasonable; use the existing runbook unless told otherwise.
